// File: gen/verilog/processing_element_negative.v
// Generated by MyHDL 0.11.51
// Date:    Wed May 28 22:30:16 2025 UTC


`timescale 1ns/10ps

module processing_element_negative (
    clk,
    i_reset,
    i_a,
    i_b,
    i_enable,
    i_clear,
    o_result,
    o_overflow,
    o_done
);


input clk;
input i_reset;
input [7:0] i_a;
input [7:0] i_b;
input i_enable;
input i_clear;
output [31:0] o_result;
wire [31:0] o_result;
output o_overflow;
wire o_overflow;
output o_done;
wire o_done;

reg [31:0] accumulator;
reg done_flag;
reg overflow_flag;
wire [15:0] product;
reg [15:0] product_latched;
reg valid_product;




assign product = (i_a * i_b);


always @(posedge clk) begin: seq_logic
    integer temp_sum;
    if (i_reset == 1) begin
        product_latched <= 0;
        overflow_flag <= 0;
        valid_product <= 0;
        done_flag <= 0;
        accumulator <= 0;
    end
    else begin
        if ((i_clear || i_reset)) begin
            accumulator <= 0;
            product_latched <= 0;
            valid_product <= 1'b0;
            done_flag <= 1'b0;
            overflow_flag <= 1'b0;
        end
        else if ((i_enable && (!valid_product))) begin
            product_latched <= product;
            valid_product <= 1'b1;
            done_flag <= 1'b0;
        end
        else if (valid_product) begin
            temp_sum = (accumulator + product_latched);
            if ((temp_sum > 33'h7fffffff)) begin
                accumulator <= 33'h7fffffff;
                overflow_flag <= 1'b1;
            end
            else if ((temp_sum < (-33'h80000000))) begin
                accumulator <= (-33'h80000000);
                overflow_flag <= 1'b1;
            end
            else begin
                accumulator <= temp_sum;
                overflow_flag <= 1'b0;
            end
            done_flag <= 1'b1;
            valid_product <= 1'b0;
        end
        else begin
            done_flag <= 1'b0;
        end
    end
end



assign o_result = accumulator;
assign o_overflow = overflow_flag;
assign o_done = done_flag;

endmodule
