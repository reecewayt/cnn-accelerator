// File: gen/verilog/processing_array_3x3.v
// Generated by MyHDL 0.11.51
// Date:    Tue May 27 20:57:55 2025 UTC


`timescale 1ns/10ps

module processing_array_3x3 (
    clk,
    i_reset,
    i_a_vector,
    i_b_vector,
    i_data_valid,
    i_read_enable,
    i_clear_acc,
    o_result_matrix,
    o_computation_done,
    o_ready_for_data,
    o_overflow_detected
);
// 3x3 Integer Processing Array for Matrix Multiplication
// 
// Performs: C = A * B where A and B are vectors representing parts of matrices
// 
// Parameters:
// - clk: System clock
// - i_reset: Active-high synchronous reset
// - i_a_vector: Input column vector (24 bits = 3 × 8-bit elements)
// - i_b_vector: Input row vector (24 bits = 3 × 8-bit elements)
// - i_data_valid: Start computation when high
// - i_read_enable: Enable output when high
// - i_clear_acc: Clear accumulators when high
// - o_result_matrix: Output 3x3 matrix (144 bits = 9 × 16-bit elements)
// - o_computation_done: High when computation complete
// - o_ready_for_data: High when ready for new data
// - o_overflow_detected: High if any overflow detected

input clk;
input i_reset;
input [23:0] i_a_vector;
input [23:0] i_b_vector;
input i_data_valid;
input i_read_enable;
input i_clear_acc;
output [143:0] o_result_matrix;
wire [143:0] o_result_matrix;
output o_computation_done;
wire o_computation_done;
output o_ready_for_data;
wire o_ready_for_data;
output o_overflow_detected;
wire o_overflow_detected;

reg all_pes_done;
reg any_overflow;
reg internal_data_valid;
reg output_ready;
reg [143:0] result_register;
reg [1:0] state;
wire signed [15:0] integer_pe0_o_result;
wire integer_pe0_o_overflow;
wire integer_pe0_o_done;
reg signed [15:0] integer_pe0_accumulator;
reg [1:0] integer_pe0_mac_state;
reg signed [16:0] integer_pe0_next_acc;
reg integer_pe0_operation_done;
reg integer_pe0_overflow_flag;
wire signed [15:0] integer_pe0_product;
wire signed [15:0] integer_pe1_o_result;
wire integer_pe1_o_overflow;
wire integer_pe1_o_done;
reg signed [15:0] integer_pe1_accumulator;
reg [1:0] integer_pe1_mac_state;
reg signed [16:0] integer_pe1_next_acc;
reg integer_pe1_operation_done;
reg integer_pe1_overflow_flag;
wire signed [15:0] integer_pe1_product;
wire signed [15:0] integer_pe2_o_result;
wire integer_pe2_o_overflow;
wire integer_pe2_o_done;
reg signed [15:0] integer_pe2_accumulator;
reg [1:0] integer_pe2_mac_state;
reg signed [16:0] integer_pe2_next_acc;
reg integer_pe2_operation_done;
reg integer_pe2_overflow_flag;
wire signed [15:0] integer_pe2_product;
wire signed [15:0] integer_pe3_o_result;
wire integer_pe3_o_overflow;
wire integer_pe3_o_done;
reg signed [15:0] integer_pe3_accumulator;
reg [1:0] integer_pe3_mac_state;
reg signed [16:0] integer_pe3_next_acc;
reg integer_pe3_operation_done;
reg integer_pe3_overflow_flag;
wire signed [15:0] integer_pe3_product;
wire signed [15:0] integer_pe4_o_result;
wire integer_pe4_o_overflow;
wire integer_pe4_o_done;
reg signed [15:0] integer_pe4_accumulator;
reg [1:0] integer_pe4_mac_state;
reg signed [16:0] integer_pe4_next_acc;
reg integer_pe4_operation_done;
reg integer_pe4_overflow_flag;
wire signed [15:0] integer_pe4_product;
wire signed [15:0] integer_pe5_o_result;
wire integer_pe5_o_overflow;
wire integer_pe5_o_done;
reg signed [15:0] integer_pe5_accumulator;
reg [1:0] integer_pe5_mac_state;
reg signed [16:0] integer_pe5_next_acc;
reg integer_pe5_operation_done;
reg integer_pe5_overflow_flag;
wire signed [15:0] integer_pe5_product;
wire signed [15:0] integer_pe6_o_result;
wire integer_pe6_o_overflow;
wire integer_pe6_o_done;
reg signed [15:0] integer_pe6_accumulator;
reg [1:0] integer_pe6_mac_state;
reg signed [16:0] integer_pe6_next_acc;
reg integer_pe6_operation_done;
reg integer_pe6_overflow_flag;
wire signed [15:0] integer_pe6_product;
wire signed [15:0] integer_pe7_o_result;
wire integer_pe7_o_overflow;
wire integer_pe7_o_done;
reg signed [15:0] integer_pe7_accumulator;
reg [1:0] integer_pe7_mac_state;
reg signed [16:0] integer_pe7_next_acc;
reg integer_pe7_operation_done;
reg integer_pe7_overflow_flag;
wire signed [15:0] integer_pe7_product;
wire signed [15:0] integer_pe8_o_result;
wire integer_pe8_o_overflow;
wire integer_pe8_o_done;
reg signed [15:0] integer_pe8_accumulator;
reg [1:0] integer_pe8_mac_state;
reg signed [16:0] integer_pe8_next_acc;
reg integer_pe8_operation_done;
reg integer_pe8_overflow_flag;
wire signed [15:0] integer_pe8_product;
wire signed [7:0] a_elements [0:3-1];
wire signed [7:0] b_elements [0:3-1];


