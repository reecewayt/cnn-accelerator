// File: gen/verilog/fp8_processing_array.v
// Generated by MyHDL 0.11.51
// Date:    Mon May 19 20:16:27 2025 UTC


`timescale 1ns/10ps

module fp8_processing_array (
    clk,
    i_a_vector,
    i_b_vector,
    i_data_valid,
    i_read_en,
    i_reset,
    i_clear_acc,
    o_c_matrix,
    o_mac_done,
    o_ready_for_new
);
// Floating Point Parallel Processing Array (2x2) for matrix multiplication
// This implements a 2x2 array of floating point processing elements (FP8_PEs)
// for performing matrix multiplication: C = A * B
// Each PE handles the multiplication of one element of the result matrix.

input clk;
input [15:0] i_a_vector;
input [15:0] i_b_vector;
input i_data_valid;
input i_read_en;
input i_reset;
input i_clear_acc;
output [31:0] o_c_matrix;
reg [31:0] o_c_matrix;
output o_mac_done;
reg o_mac_done;
output o_ready_for_new;
wire o_ready_for_new;

reg all_pes_done;
reg [31:0] output_matrix_reg;
wire fp8_pe0_mac_done;
wire fp8_pe0_mac_ready;
wire fp8_pe0_mac_start;
wire [7:0] fp8_pe0_output_reg;
reg [1:0] fp8_pe0_fp8_e4m3_mac0_acc_state;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_accumulator;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_add_a;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_add_b;
wire fp8_pe0_fp8_e4m3_mac0_add_done;
reg fp8_pe0_fp8_e4m3_mac0_add_pending;
wire [7:0] fp8_pe0_fp8_e4m3_mac0_add_result;
reg fp8_pe0_fp8_e4m3_mac0_add_start;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_mult_a;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_mult_b;
wire fp8_pe0_fp8_e4m3_mac0_mult_done;
reg fp8_pe0_fp8_e4m3_mac0_mult_pending;
wire [7:0] fp8_pe0_fp8_e4m3_mac0_mult_result;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_mult_result_reg;
reg fp8_pe0_fp8_e4m3_mac0_mult_start;
reg [1:0] fp8_pe0_fp8_e4m3_mac0_mult_state;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_output_reg;
reg fp8_pe0_fp8_e4m3_mac0_s_mac_done;
wire fp8_pe0_fp8_e4m3_mac0_s_ready_for_new;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a;
reg signed [6:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_exp;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_is_nan;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_is_zero;
reg [3:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_man;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_sign;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b;
reg signed [6:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_exp;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_is_nan;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_is_zero;
reg [3:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_man;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_sign;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_guard;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_product;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_round_bit;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_s_done;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_s_output_z;
reg [4:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_shift_amount;
reg [2:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_sticky;
reg [2:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_temp_mantissa_bits;
reg [5:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_temp_shifted_man;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z;
reg signed [6:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp;
reg [5:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_man;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_sign;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a;
reg signed [4:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_e;
reg [4:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_s;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b;
reg signed [4:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_e;
reg [4:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_s;
reg signed [5:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_exp_diff;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_guard;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_round_bit;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_s_done;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_s_output_z;
reg [3:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sticky;
reg [5:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val;
reg [7:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z;
reg signed [4:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e;
reg [3:0] fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m;
reg fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_s;
wire fp8_pe1_mac_done;
wire fp8_pe1_mac_ready;
wire fp8_pe1_mac_start;
wire [7:0] fp8_pe1_output_reg;
reg [1:0] fp8_pe1_fp8_e4m3_mac1_acc_state;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_accumulator;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_add_a;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_add_b;
wire fp8_pe1_fp8_e4m3_mac1_add_done;
reg fp8_pe1_fp8_e4m3_mac1_add_pending;
wire [7:0] fp8_pe1_fp8_e4m3_mac1_add_result;
reg fp8_pe1_fp8_e4m3_mac1_add_start;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_mult_a;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_mult_b;
wire fp8_pe1_fp8_e4m3_mac1_mult_done;
reg fp8_pe1_fp8_e4m3_mac1_mult_pending;
wire [7:0] fp8_pe1_fp8_e4m3_mac1_mult_result;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_mult_result_reg;
reg fp8_pe1_fp8_e4m3_mac1_mult_start;
reg [1:0] fp8_pe1_fp8_e4m3_mac1_mult_state;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_output_reg;
reg fp8_pe1_fp8_e4m3_mac1_s_mac_done;
wire fp8_pe1_fp8_e4m3_mac1_s_ready_for_new;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a;
reg signed [6:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_exp;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_is_nan;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_is_zero;
reg [3:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_man;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_sign;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b;
reg signed [6:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_exp;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_is_nan;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_is_zero;
reg [3:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_man;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_sign;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_guard;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_product;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_round_bit;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_s_done;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_s_output_z;
reg [4:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_shift_amount;
reg [2:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_sticky;
reg [2:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_temp_mantissa_bits;
reg [5:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_temp_shifted_man;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z;
reg signed [6:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp;
reg [5:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_man;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_sign;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a;
reg signed [4:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_e;
reg [4:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_s;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b;
reg signed [4:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_e;
reg [4:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_s;
reg signed [5:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_exp_diff;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_guard;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_round_bit;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_s_done;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_s_output_z;
reg [3:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sticky;
reg [5:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val;
reg [7:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z;
reg signed [4:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e;
reg [3:0] fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m;
reg fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_s;
wire fp8_pe2_mac_done;
wire fp8_pe2_mac_ready;
wire fp8_pe2_mac_start;
wire [7:0] fp8_pe2_output_reg;
reg [1:0] fp8_pe2_fp8_e4m3_mac2_acc_state;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_accumulator;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_add_a;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_add_b;
wire fp8_pe2_fp8_e4m3_mac2_add_done;
reg fp8_pe2_fp8_e4m3_mac2_add_pending;
wire [7:0] fp8_pe2_fp8_e4m3_mac2_add_result;
reg fp8_pe2_fp8_e4m3_mac2_add_start;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_mult_a;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_mult_b;
wire fp8_pe2_fp8_e4m3_mac2_mult_done;
reg fp8_pe2_fp8_e4m3_mac2_mult_pending;
wire [7:0] fp8_pe2_fp8_e4m3_mac2_mult_result;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_mult_result_reg;
reg fp8_pe2_fp8_e4m3_mac2_mult_start;
reg [1:0] fp8_pe2_fp8_e4m3_mac2_mult_state;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_output_reg;
reg fp8_pe2_fp8_e4m3_mac2_s_mac_done;
wire fp8_pe2_fp8_e4m3_mac2_s_ready_for_new;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a;
reg signed [6:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_exp;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_is_nan;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_is_zero;
reg [3:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_man;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_sign;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b;
reg signed [6:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_exp;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_is_nan;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_is_zero;
reg [3:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_man;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_sign;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_guard;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_product;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_round_bit;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_s_done;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_s_output_z;
reg [4:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_shift_amount;
reg [2:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_sticky;
reg [2:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_temp_mantissa_bits;
reg [5:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_temp_shifted_man;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z;
reg signed [6:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp;
reg [5:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_man;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_sign;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a;
reg signed [4:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_e;
reg [4:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_s;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b;
reg signed [4:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_e;
reg [4:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_s;
reg signed [5:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_exp_diff;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_guard;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_round_bit;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_s_done;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_s_output_z;
reg [3:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sticky;
reg [5:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val;
reg [7:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z;
reg signed [4:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e;
reg [3:0] fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m;
reg fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_s;
wire fp8_pe3_mac_done;
wire fp8_pe3_mac_ready;
wire fp8_pe3_mac_start;
wire [7:0] fp8_pe3_output_reg;
reg [1:0] fp8_pe3_fp8_e4m3_mac3_acc_state;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_accumulator;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_add_a;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_add_b;
wire fp8_pe3_fp8_e4m3_mac3_add_done;
reg fp8_pe3_fp8_e4m3_mac3_add_pending;
wire [7:0] fp8_pe3_fp8_e4m3_mac3_add_result;
reg fp8_pe3_fp8_e4m3_mac3_add_start;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_mult_a;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_mult_b;
wire fp8_pe3_fp8_e4m3_mac3_mult_done;
reg fp8_pe3_fp8_e4m3_mac3_mult_pending;
wire [7:0] fp8_pe3_fp8_e4m3_mac3_mult_result;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_mult_result_reg;
reg fp8_pe3_fp8_e4m3_mac3_mult_start;
reg [1:0] fp8_pe3_fp8_e4m3_mac3_mult_state;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_output_reg;
reg fp8_pe3_fp8_e4m3_mac3_s_mac_done;
wire fp8_pe3_fp8_e4m3_mac3_s_ready_for_new;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a;
reg signed [6:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_exp;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_is_nan;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_is_zero;
reg [3:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_man;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_sign;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b;
reg signed [6:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_exp;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_is_nan;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_is_zero;
reg [3:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_man;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_sign;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_guard;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_product;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_round_bit;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_s_done;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_s_output_z;
reg [4:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_shift_amount;
reg [2:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_sticky;
reg [2:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_temp_mantissa_bits;
reg [5:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_temp_shifted_man;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z;
reg signed [6:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp;
reg [5:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_man;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_sign;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a;
reg signed [4:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_e;
reg [4:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_s;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b;
reg signed [4:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_e;
reg [4:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_s;
reg signed [5:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_exp_diff;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_guard;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_round_bit;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_s_done;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_s_output_z;
reg [3:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sticky;
reg [5:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val;
reg [7:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z;
reg signed [4:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e;
reg [3:0] fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m;
reg fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_s;
wire [7:0] a_slices [0:2-1];
wire [7:0] b_slices [0:2-1];
reg pe_done_latches [0:4-1];
wire mac_done_signals [0:4-1];
wire [7:0] c_outputs [0:4-1];
wire ready_signals [0:4-1];




assign a_slices[0] = i_a_vector[7-1:0];
assign a_slices[1] = i_a_vector[15-1:8];
assign b_slices[0] = i_b_vector[7-1:0];
assign b_slices[1] = i_b_vector[15-1:8];


always @(posedge clk) begin: fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state_machine
    if (i_reset == 1) begin
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_is_zero <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_man <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_temp_mantissa_bits <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_exp <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_sticky <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_is_nan <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_man <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_shift_amount <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_guard <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_is_nan <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_round_bit <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_sign <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_is_zero <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_sign <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_man <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b000;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_s_done <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_s_output_z <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_temp_shifted_man <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_sign <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_product <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_exp <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b000;
            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_s_done <= 0;
        end
        else begin
            case (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state)
                3'b000: begin
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_s_done <= 0;
                    if (fp8_pe0_fp8_e4m3_mac0_mult_start) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a <= fp8_pe0_fp8_e4m3_mac0_mult_a;
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b <= fp8_pe0_fp8_e4m3_mac0_mult_b;
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b001;
                    end
                end
                3'b001: begin
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_sign <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a[(8 - 1)] != 0);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_exp <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a[(8 - 1)-1:3] - 7);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_sign <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b[(8 - 1)] != 0);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_exp <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b[(8 - 1)-1:3] - 7);
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a[(8 - 1)-1:3] != 0)) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_man <= {1'h1, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a[3-1:0]};
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_man <= {1'h0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a[3-1:0]};
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_exp <= (1 - 7);
                    end
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b[(8 - 1)-1:3] != 0)) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_man <= {1'h1, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b[3-1:0]};
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_man <= {1'h0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b[3-1:0]};
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_exp <= (1 - 7);
                    end
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_is_zero <= ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a[(8 - 1)-1:3] == 0) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a[3-1:0] == 0));
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_is_zero <= ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b[(8 - 1)-1:3] == 0) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b[3-1:0] == 0));
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_is_nan <= (($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a[3-1:0]}) == ((1 << 3) - 1)));
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_is_nan <= (($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b[3-1:0]}) == ((1 << 3) - 1)));
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b010;
                end
                3'b010: begin
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_sign <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_sign ^ fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_sign);
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_is_nan || fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_is_nan)) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z <= ((((1 << 4) - 1) << 3) | (1 << (3 - 1)));
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b111;
                    end
                    else if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_is_zero || fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_is_zero)) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z <= ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_sign}) << (8 - 1));
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b111;
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b011;
                    end
                end
                3'b011: begin
                    if (((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_man[3] == 0) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_man != 0))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_man <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_man << 1);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_exp <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_exp - 1);
                    end
                    else if (((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_man[3] == 0) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_man != 0))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_man <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_man << 1);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_exp <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_exp - 1);
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_exp + fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_exp);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_product <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_man * fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_man);
                        if (((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_a_exp + fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_b_exp) >= (7 + 2))) begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z <= (($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_sign}) << (8 - 1)) | ((1 << 7) - 2));
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b111;
                        end
                        else begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b100;
                        end
                    end
                end
                3'b100: begin
                    if (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_product[((2 * (3 + 1)) - 1)]) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_man <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_product[((2 * (3 + 1)) - 1)-1:(((2 * (3 + 1)) - 3) - 1)];
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp + 1);
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_man <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_product[((2 * (3 + 1)) - 2)-1:(((2 * (3 + 1)) - 3) - 2)];
                    end
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_guard <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_product[2] != 0);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_round_bit <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_product[1] != 0);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_sticky <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_product[0] != 0);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b101;
                end
                3'b101: begin
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_guard && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_round_bit || fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_sticky || fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_man[0]))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_man <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_man + 1);
                        if (($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_man}) == ((1 << (3 + 1)) - 1))) begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp + 1);
                        end
                    end
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b110;
                end
                3'b110: begin
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp < ((-7) - 3))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z <= ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_sign}) << (8 - 1));
                    end
                    else if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp < (-7))) begin
                        if ((((-7) - fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp) <= 3)) begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_shift_amount <= ((-7) - fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp);
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_temp_shifted_man <= $signed($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_man}) >>> ((-7) - fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp));
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_temp_mantissa_bits <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_temp_shifted_man[3-1:0];
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z <= (($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_sign}) << (8 - 1)) | fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_temp_mantissa_bits);
                        end
                        else begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z <= ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_sign}) << (8 - 1));
                        end
                    end
                    else if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp >= (7 + 2))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z <= ((($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_sign}) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 2));
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z <= ((($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_sign}) << (8 - 1)) | ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_exp + 7) << 3)) | fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z_man[3-1:0]);
                    end
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b111;
                end
                3'b111: begin
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_s_output_z <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_z;
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_s_done <= 1;
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_state <= 3'b000;
                end
            endcase
        end
    end
end



assign fp8_pe0_fp8_e4m3_mac0_mult_result = fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_s_output_z;
assign fp8_pe0_fp8_e4m3_mac0_mult_done = fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_multiply0_s_done;


always @(posedge clk) begin: fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state_machine
    if (i_reset == 1) begin
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sticky <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_exp_diff <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_e <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_guard <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_s <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_round_bit <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_s <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b0000;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_e <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_s_done <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_s <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_s_output_z <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m <= 0;
        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b0000;
            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_s_done <= 0;
        end
        else begin
            case (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state)
                4'b0000: begin
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_s_done <= 0;
                    if (fp8_pe0_fp8_e4m3_mac0_add_start) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a <= fp8_pe0_fp8_e4m3_mac0_add_a;
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b <= fp8_pe0_fp8_e4m3_mac0_add_b;
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b0001;
                    end
                end
                4'b0001: begin
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_s <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[(8 - 1)] != 0);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_e <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[(8 - 1)-1:3] - 7);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m <= 5'h0;
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_s <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[(8 - 1)] != 0);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_e <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[(8 - 1)-1:3] - 7);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m <= 5'h0;
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[(8 - 1)-1:3] != 0)) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m <= {1'h1, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[3-1:0], 1'h0};
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m <= {1'h0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[3-1:0], 1'h0};
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_e <= ((-7) + 1);
                    end
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[(8 - 1)-1:3] != 0)) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m <= {1'h1, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[3-1:0], 1'h0};
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m <= {1'h0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[3-1:0], 1'h0};
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_e <= ((-7) + 1);
                    end
                    if ((($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[(8 - 1)-1:3]}) - 7) > ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[(8 - 1)-1:3]}) - 7))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_exp_diff <= (($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[(8 - 1)-1:3]}) - 7) - ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[(8 - 1)-1:3]}) - 7));
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_exp_diff <= (($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[(8 - 1)-1:3]}) - 7) - ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[(8 - 1)-1:3]}) - 7));
                    end
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b0010;
                end
                4'b0010: begin
                    if (((($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[3-1:0]}) == ((1 << 3) - 1))) || (($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[3-1:0]}) == ((1 << 3) - 1))))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z <= ((($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_s}) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 1));
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b1010;
                    end
                    else if (((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[(8 - 1)-1:3] == 0) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[3-1:0] == 0))) begin
                        if (((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[(8 - 1)-1:3] == 0) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[3-1:0] == 0))) begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z <= ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_s & fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_s) << (8 - 1));
                        end
                        else begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b;
                        end
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b1010;
                    end
                    else if (((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[(8 - 1)-1:3] == 0) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[3-1:0] == 0))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a;
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b1010;
                    end
                    else if ((((($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a[3-1:0]}) == ((1 << 3) - 2))) || (($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b[3-1:0]}) == ((1 << 3) - 2)))) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_s == fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_s))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z <= ((((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_s & fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_s) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 2));
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b1010;
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b0011;
                    end
                end
                4'b0011: begin
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_e > fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_e)) begin
                        if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_exp_diff > 5)) begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a;
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b1010;
                        end
                        else begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_e <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_e + 1);
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m >>> 1);
                            if (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m[0]) begin
                                fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m[0] <= 1;
                            end
                        end
                    end
                    else if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_e < fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_e)) begin
                        if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_exp_diff > 5)) begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b;
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b1010;
                        end
                        else begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_e <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_e + 1);
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m >>> 1);
                            if (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m[0]) begin
                                fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m[0] <= 1;
                            end
                        end
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b0100;
                    end
                end
                4'b0100: begin
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_e;
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_s == fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_s)) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m + fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_s <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_s;
                    end
                    else begin
                        if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m >= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m)) begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m - fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m);
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_s <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_s;
                        end
                        else begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_m - fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_a_m);
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_s <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_b_s;
                        end
                    end
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b0101;
                end
                4'b0101: begin
                    if (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val[(3 + 2)]) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val[(3 + 3)-1:2];
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_guard <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val[1] != 0);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_round_bit <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val[0] != 0);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sticky <= 1'b0;
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e + 1);
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val[(3 + 2)-1:1];
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_guard <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sum_val[0] != 0);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_round_bit <= 1'b0;
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sticky <= 1'b0;
                    end
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b0110;
                end
                4'b0110: begin
                    if (((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m[3] == 0) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e > ((-7) + 1)))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e - 1);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m << 1);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m[0] <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_guard;
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_guard <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_round_bit;
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_round_bit <= 1'b0;
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b0111;
                    end
                end
                4'b0111: begin
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e < ((-7) + 1))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e + 1);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_guard <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m[0];
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m >>> 1);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_round_bit <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_guard;
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sticky <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sticky | fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_round_bit);
                    end
                    else begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b1000;
                    end
                end
                4'b1000: begin
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_guard && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_round_bit || fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_sticky || fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m[0]))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m + 1);
                        if (($signed({1'b0, fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m}) == ((1 << 3) - 1))) begin
                            fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e + 1);
                        end
                    end
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b1001;
                end
                4'b1001: begin
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z[3-1:0] <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m[3-1:0];
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z[(8 - 1)-1:3] <= (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e + 7);
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z[(8 - 1)] <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_s;
                    if (((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e == ((-7) + 1)) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m[3] == 0))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z[(8 - 1)-1:3] <= 0;
                    end
                    if (((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e <= ((-7) + 1)) && (fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_m == 0))) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z[(8 - 1)] <= 0;
                    end
                    if ((fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z_e >= 7)) begin
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z[(8 - 1)-1:3] <= ((1 << 4) - 1);
                        fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z[3-1:0] <= ((1 << 3) - 2);
                    end
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b1010;
                end
                4'b1010: begin
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_s_output_z <= fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_z;
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_s_done <= 1;
                    fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_state <= 4'b0000;
                end
            endcase
        end
    end
end



assign fp8_pe0_fp8_e4m3_mac0_add_result = fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_s_output_z;
assign fp8_pe0_fp8_e4m3_mac0_add_done = fp8_pe0_fp8_e4m3_mac0_fp8_e4m3_add0_s_done;


always @(posedge clk) begin: fp8_pe0_fp8_e4m3_mac0_multiply_pipeline
    if (i_reset == 1) begin
        fp8_pe0_fp8_e4m3_mac0_mult_state <= 2'b00;
        fp8_pe0_fp8_e4m3_mac0_mult_start <= 0;
        fp8_pe0_fp8_e4m3_mac0_mult_result_reg <= 0;
        fp8_pe0_fp8_e4m3_mac0_mult_a <= 0;
        fp8_pe0_fp8_e4m3_mac0_mult_b <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe0_fp8_e4m3_mac0_mult_state <= 2'b00;
        end
        else begin
            case (fp8_pe0_fp8_e4m3_mac0_mult_state)
                2'b00: begin
                    if (fp8_pe0_mac_start) begin
                        fp8_pe0_fp8_e4m3_mac0_mult_a <= a_slices[0];
                        fp8_pe0_fp8_e4m3_mac0_mult_b <= b_slices[0];
                        fp8_pe0_fp8_e4m3_mac0_mult_state <= 2'b01;
                    end
                end
                2'b01: begin
                    fp8_pe0_fp8_e4m3_mac0_mult_start <= 1;
                    fp8_pe0_fp8_e4m3_mac0_mult_state <= 2'b10;
                end
                2'b10: begin
                    fp8_pe0_fp8_e4m3_mac0_mult_start <= 0;
                    if (fp8_pe0_fp8_e4m3_mac0_mult_done) begin
                        fp8_pe0_fp8_e4m3_mac0_mult_result_reg <= fp8_pe0_fp8_e4m3_mac0_mult_result;
                        fp8_pe0_fp8_e4m3_mac0_mult_state <= 2'b00;
                    end
                end
            endcase
        end
    end
end


always @(posedge clk) begin: fp8_pe0_fp8_e4m3_mac0_accumulate_pipeline
    if (i_reset == 1) begin
        fp8_pe0_fp8_e4m3_mac0_acc_state <= 2'b00;
        fp8_pe0_fp8_e4m3_mac0_add_a <= 0;
        fp8_pe0_fp8_e4m3_mac0_add_b <= 0;
        fp8_pe0_fp8_e4m3_mac0_s_mac_done <= 0;
        fp8_pe0_fp8_e4m3_mac0_add_start <= 0;
        fp8_pe0_fp8_e4m3_mac0_accumulator <= 0;
        fp8_pe0_fp8_e4m3_mac0_add_pending <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe0_fp8_e4m3_mac0_acc_state <= 2'b00;
            fp8_pe0_fp8_e4m3_mac0_accumulator <= 0;
            fp8_pe0_fp8_e4m3_mac0_add_pending <= 0;
            fp8_pe0_fp8_e4m3_mac0_s_mac_done <= 0;
        end
        else begin
            fp8_pe0_fp8_e4m3_mac0_s_mac_done <= 0;
            case (fp8_pe0_fp8_e4m3_mac0_acc_state)
                2'b00: begin
                    if (i_clear_acc) begin
                        fp8_pe0_fp8_e4m3_mac0_accumulator <= 0;
                        fp8_pe0_fp8_e4m3_mac0_add_pending <= 0;
                    end
                    else if ((fp8_pe0_fp8_e4m3_mac0_mult_pending && (!fp8_pe0_fp8_e4m3_mac0_add_pending))) begin
                        fp8_pe0_fp8_e4m3_mac0_add_a <= fp8_pe0_fp8_e4m3_mac0_mult_result_reg;
                        fp8_pe0_fp8_e4m3_mac0_add_b <= fp8_pe0_fp8_e4m3_mac0_accumulator;
                        fp8_pe0_fp8_e4m3_mac0_add_pending <= 1;
                        fp8_pe0_fp8_e4m3_mac0_acc_state <= 2'b01;
                    end
                end
                2'b01: begin
                    fp8_pe0_fp8_e4m3_mac0_add_start <= 1;
                    fp8_pe0_fp8_e4m3_mac0_acc_state <= 2'b10;
                end
                2'b10: begin
                    fp8_pe0_fp8_e4m3_mac0_add_start <= 0;
                    if (fp8_pe0_fp8_e4m3_mac0_add_done) begin
                        fp8_pe0_fp8_e4m3_mac0_acc_state <= 2'b11;
                    end
                end
                2'b11: begin
                    fp8_pe0_fp8_e4m3_mac0_accumulator <= fp8_pe0_fp8_e4m3_mac0_add_result;
                    fp8_pe0_fp8_e4m3_mac0_add_pending <= 0;
                    fp8_pe0_fp8_e4m3_mac0_s_mac_done <= 1;
                    fp8_pe0_fp8_e4m3_mac0_acc_state <= 2'b00;
                end
            endcase
        end
    end
end


always @(posedge clk) begin: fp8_pe0_fp8_e4m3_mac0_mult_pending_control
    if (i_reset == 1) begin
        fp8_pe0_fp8_e4m3_mac0_mult_pending <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe0_fp8_e4m3_mac0_mult_pending <= 0;
        end
        else begin
            if (((fp8_pe0_fp8_e4m3_mac0_mult_state == 2'b10) && fp8_pe0_fp8_e4m3_mac0_mult_done)) begin
                fp8_pe0_fp8_e4m3_mac0_mult_pending <= 1;
            end
            else if ((fp8_pe0_fp8_e4m3_mac0_acc_state == 2'b11)) begin
                fp8_pe0_fp8_e4m3_mac0_mult_pending <= 0;
            end
            else if (i_clear_acc) begin
                fp8_pe0_fp8_e4m3_mac0_mult_pending <= 0;
            end
        end
    end
end


always @(posedge clk) begin: fp8_pe0_fp8_e4m3_mac0_output_control
    if (i_reset == 1) begin
        fp8_pe0_fp8_e4m3_mac0_output_reg <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe0_fp8_e4m3_mac0_output_reg <= 0;
        end
        else begin
            if (i_read_en) begin
                fp8_pe0_fp8_e4m3_mac0_output_reg <= fp8_pe0_fp8_e4m3_mac0_accumulator;
            end
        end
    end
end



assign fp8_pe0_output_reg = fp8_pe0_fp8_e4m3_mac0_output_reg;
assign fp8_pe0_mac_done = fp8_pe0_fp8_e4m3_mac0_s_mac_done;
assign fp8_pe0_fp8_e4m3_mac0_s_ready_for_new = ((fp8_pe0_fp8_e4m3_mac0_mult_state == 2'b00) && (!fp8_pe0_fp8_e4m3_mac0_mult_pending));
assign fp8_pe0_mac_ready = fp8_pe0_fp8_e4m3_mac0_s_ready_for_new;

// Control logic for the MAC unit

assign fp8_pe0_mac_start = (i_data_valid && fp8_pe0_mac_ready);
assign mac_done_signals[0] = fp8_pe0_mac_done;
assign ready_signals[0] = fp8_pe0_mac_ready;

// Connect the MAC output to the PE output

assign c_outputs[0] = fp8_pe0_output_reg;


always @(posedge clk) begin: fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state_machine
    if (i_reset == 1) begin
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_is_zero <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_man <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_temp_mantissa_bits <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_exp <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_sticky <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_is_nan <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_man <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_shift_amount <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_guard <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_is_nan <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_round_bit <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_sign <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_is_zero <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_sign <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_man <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b000;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_s_done <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_s_output_z <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_temp_shifted_man <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_sign <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_product <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_exp <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b000;
            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_s_done <= 0;
        end
        else begin
            case (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state)
                3'b000: begin
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_s_done <= 0;
                    if (fp8_pe1_fp8_e4m3_mac1_mult_start) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a <= fp8_pe1_fp8_e4m3_mac1_mult_a;
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b <= fp8_pe1_fp8_e4m3_mac1_mult_b;
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b001;
                    end
                end
                3'b001: begin
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_sign <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a[(8 - 1)] != 0);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_exp <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a[(8 - 1)-1:3] - 7);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_sign <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b[(8 - 1)] != 0);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_exp <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b[(8 - 1)-1:3] - 7);
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a[(8 - 1)-1:3] != 0)) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_man <= {1'h1, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a[3-1:0]};
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_man <= {1'h0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a[3-1:0]};
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_exp <= (1 - 7);
                    end
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b[(8 - 1)-1:3] != 0)) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_man <= {1'h1, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b[3-1:0]};
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_man <= {1'h0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b[3-1:0]};
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_exp <= (1 - 7);
                    end
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_is_zero <= ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a[(8 - 1)-1:3] == 0) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a[3-1:0] == 0));
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_is_zero <= ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b[(8 - 1)-1:3] == 0) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b[3-1:0] == 0));
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_is_nan <= (($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a[3-1:0]}) == ((1 << 3) - 1)));
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_is_nan <= (($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b[3-1:0]}) == ((1 << 3) - 1)));
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b010;
                end
                3'b010: begin
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_sign <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_sign ^ fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_sign);
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_is_nan || fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_is_nan)) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z <= ((((1 << 4) - 1) << 3) | (1 << (3 - 1)));
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b111;
                    end
                    else if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_is_zero || fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_is_zero)) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z <= ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_sign}) << (8 - 1));
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b111;
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b011;
                    end
                end
                3'b011: begin
                    if (((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_man[3] == 0) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_man != 0))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_man <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_man << 1);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_exp <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_exp - 1);
                    end
                    else if (((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_man[3] == 0) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_man != 0))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_man <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_man << 1);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_exp <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_exp - 1);
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_exp + fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_exp);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_product <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_man * fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_man);
                        if (((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_a_exp + fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_b_exp) >= (7 + 2))) begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z <= (($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_sign}) << (8 - 1)) | ((1 << 7) - 2));
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b111;
                        end
                        else begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b100;
                        end
                    end
                end
                3'b100: begin
                    if (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_product[((2 * (3 + 1)) - 1)]) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_man <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_product[((2 * (3 + 1)) - 1)-1:(((2 * (3 + 1)) - 3) - 1)];
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp + 1);
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_man <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_product[((2 * (3 + 1)) - 2)-1:(((2 * (3 + 1)) - 3) - 2)];
                    end
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_guard <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_product[2] != 0);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_round_bit <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_product[1] != 0);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_sticky <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_product[0] != 0);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b101;
                end
                3'b101: begin
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_guard && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_round_bit || fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_sticky || fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_man[0]))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_man <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_man + 1);
                        if (($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_man}) == ((1 << (3 + 1)) - 1))) begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp + 1);
                        end
                    end
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b110;
                end
                3'b110: begin
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp < ((-7) - 3))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z <= ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_sign}) << (8 - 1));
                    end
                    else if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp < (-7))) begin
                        if ((((-7) - fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp) <= 3)) begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_shift_amount <= ((-7) - fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp);
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_temp_shifted_man <= $signed($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_man}) >>> ((-7) - fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp));
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_temp_mantissa_bits <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_temp_shifted_man[3-1:0];
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z <= (($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_sign}) << (8 - 1)) | fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_temp_mantissa_bits);
                        end
                        else begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z <= ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_sign}) << (8 - 1));
                        end
                    end
                    else if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp >= (7 + 2))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z <= ((($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_sign}) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 2));
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z <= ((($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_sign}) << (8 - 1)) | ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_exp + 7) << 3)) | fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z_man[3-1:0]);
                    end
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b111;
                end
                3'b111: begin
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_s_output_z <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_z;
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_s_done <= 1;
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_state <= 3'b000;
                end
            endcase
        end
    end
end



assign fp8_pe1_fp8_e4m3_mac1_mult_result = fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_s_output_z;
assign fp8_pe1_fp8_e4m3_mac1_mult_done = fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_multiply1_s_done;


always @(posedge clk) begin: fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state_machine
    if (i_reset == 1) begin
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sticky <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_exp_diff <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_e <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_guard <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_s <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_round_bit <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_s <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b0000;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_e <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_s_done <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_s <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_s_output_z <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m <= 0;
        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b0000;
            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_s_done <= 0;
        end
        else begin
            case (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state)
                4'b0000: begin
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_s_done <= 0;
                    if (fp8_pe1_fp8_e4m3_mac1_add_start) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a <= fp8_pe1_fp8_e4m3_mac1_add_a;
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b <= fp8_pe1_fp8_e4m3_mac1_add_b;
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b0001;
                    end
                end
                4'b0001: begin
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_s <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[(8 - 1)] != 0);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_e <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[(8 - 1)-1:3] - 7);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m <= 5'h0;
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_s <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[(8 - 1)] != 0);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_e <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[(8 - 1)-1:3] - 7);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m <= 5'h0;
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[(8 - 1)-1:3] != 0)) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m <= {1'h1, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[3-1:0], 1'h0};
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m <= {1'h0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[3-1:0], 1'h0};
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_e <= ((-7) + 1);
                    end
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[(8 - 1)-1:3] != 0)) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m <= {1'h1, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[3-1:0], 1'h0};
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m <= {1'h0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[3-1:0], 1'h0};
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_e <= ((-7) + 1);
                    end
                    if ((($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[(8 - 1)-1:3]}) - 7) > ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[(8 - 1)-1:3]}) - 7))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_exp_diff <= (($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[(8 - 1)-1:3]}) - 7) - ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[(8 - 1)-1:3]}) - 7));
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_exp_diff <= (($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[(8 - 1)-1:3]}) - 7) - ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[(8 - 1)-1:3]}) - 7));
                    end
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b0010;
                end
                4'b0010: begin
                    if (((($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[3-1:0]}) == ((1 << 3) - 1))) || (($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[3-1:0]}) == ((1 << 3) - 1))))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z <= ((($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_s}) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 1));
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b1010;
                    end
                    else if (((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[(8 - 1)-1:3] == 0) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[3-1:0] == 0))) begin
                        if (((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[(8 - 1)-1:3] == 0) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[3-1:0] == 0))) begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z <= ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_s & fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_s) << (8 - 1));
                        end
                        else begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b;
                        end
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b1010;
                    end
                    else if (((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[(8 - 1)-1:3] == 0) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[3-1:0] == 0))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a;
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b1010;
                    end
                    else if ((((($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a[3-1:0]}) == ((1 << 3) - 2))) || (($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b[3-1:0]}) == ((1 << 3) - 2)))) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_s == fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_s))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z <= ((((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_s & fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_s) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 2));
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b1010;
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b0011;
                    end
                end
                4'b0011: begin
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_e > fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_e)) begin
                        if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_exp_diff > 5)) begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a;
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b1010;
                        end
                        else begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_e <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_e + 1);
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m >>> 1);
                            if (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m[0]) begin
                                fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m[0] <= 1;
                            end
                        end
                    end
                    else if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_e < fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_e)) begin
                        if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_exp_diff > 5)) begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b;
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b1010;
                        end
                        else begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_e <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_e + 1);
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m >>> 1);
                            if (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m[0]) begin
                                fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m[0] <= 1;
                            end
                        end
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b0100;
                    end
                end
                4'b0100: begin
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_e;
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_s == fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_s)) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m + fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_s <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_s;
                    end
                    else begin
                        if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m >= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m)) begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m - fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m);
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_s <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_s;
                        end
                        else begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_m - fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_a_m);
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_s <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_b_s;
                        end
                    end
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b0101;
                end
                4'b0101: begin
                    if (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val[(3 + 2)]) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val[(3 + 3)-1:2];
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_guard <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val[1] != 0);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_round_bit <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val[0] != 0);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sticky <= 1'b0;
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e + 1);
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val[(3 + 2)-1:1];
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_guard <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sum_val[0] != 0);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_round_bit <= 1'b0;
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sticky <= 1'b0;
                    end
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b0110;
                end
                4'b0110: begin
                    if (((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m[3] == 0) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e > ((-7) + 1)))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e - 1);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m << 1);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m[0] <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_guard;
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_guard <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_round_bit;
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_round_bit <= 1'b0;
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b0111;
                    end
                end
                4'b0111: begin
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e < ((-7) + 1))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e + 1);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_guard <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m[0];
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m >>> 1);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_round_bit <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_guard;
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sticky <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sticky | fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_round_bit);
                    end
                    else begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b1000;
                    end
                end
                4'b1000: begin
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_guard && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_round_bit || fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_sticky || fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m[0]))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m + 1);
                        if (($signed({1'b0, fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m}) == ((1 << 3) - 1))) begin
                            fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e + 1);
                        end
                    end
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b1001;
                end
                4'b1001: begin
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z[3-1:0] <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m[3-1:0];
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z[(8 - 1)-1:3] <= (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e + 7);
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z[(8 - 1)] <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_s;
                    if (((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e == ((-7) + 1)) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m[3] == 0))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z[(8 - 1)-1:3] <= 0;
                    end
                    if (((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e <= ((-7) + 1)) && (fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_m == 0))) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z[(8 - 1)] <= 0;
                    end
                    if ((fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z_e >= 7)) begin
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z[(8 - 1)-1:3] <= ((1 << 4) - 1);
                        fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z[3-1:0] <= ((1 << 3) - 2);
                    end
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b1010;
                end
                4'b1010: begin
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_s_output_z <= fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_z;
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_s_done <= 1;
                    fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_state <= 4'b0000;
                end
            endcase
        end
    end
end



assign fp8_pe1_fp8_e4m3_mac1_add_result = fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_s_output_z;
assign fp8_pe1_fp8_e4m3_mac1_add_done = fp8_pe1_fp8_e4m3_mac1_fp8_e4m3_add1_s_done;


always @(posedge clk) begin: fp8_pe1_fp8_e4m3_mac1_multiply_pipeline
    if (i_reset == 1) begin
        fp8_pe1_fp8_e4m3_mac1_mult_state <= 2'b00;
        fp8_pe1_fp8_e4m3_mac1_mult_start <= 0;
        fp8_pe1_fp8_e4m3_mac1_mult_result_reg <= 0;
        fp8_pe1_fp8_e4m3_mac1_mult_a <= 0;
        fp8_pe1_fp8_e4m3_mac1_mult_b <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe1_fp8_e4m3_mac1_mult_state <= 2'b00;
        end
        else begin
            case (fp8_pe1_fp8_e4m3_mac1_mult_state)
                2'b00: begin
                    if (fp8_pe1_mac_start) begin
                        fp8_pe1_fp8_e4m3_mac1_mult_a <= a_slices[0];
                        fp8_pe1_fp8_e4m3_mac1_mult_b <= b_slices[1];
                        fp8_pe1_fp8_e4m3_mac1_mult_state <= 2'b01;
                    end
                end
                2'b01: begin
                    fp8_pe1_fp8_e4m3_mac1_mult_start <= 1;
                    fp8_pe1_fp8_e4m3_mac1_mult_state <= 2'b10;
                end
                2'b10: begin
                    fp8_pe1_fp8_e4m3_mac1_mult_start <= 0;
                    if (fp8_pe1_fp8_e4m3_mac1_mult_done) begin
                        fp8_pe1_fp8_e4m3_mac1_mult_result_reg <= fp8_pe1_fp8_e4m3_mac1_mult_result;
                        fp8_pe1_fp8_e4m3_mac1_mult_state <= 2'b00;
                    end
                end
            endcase
        end
    end
end


always @(posedge clk) begin: fp8_pe1_fp8_e4m3_mac1_accumulate_pipeline
    if (i_reset == 1) begin
        fp8_pe1_fp8_e4m3_mac1_acc_state <= 2'b00;
        fp8_pe1_fp8_e4m3_mac1_add_a <= 0;
        fp8_pe1_fp8_e4m3_mac1_add_b <= 0;
        fp8_pe1_fp8_e4m3_mac1_s_mac_done <= 0;
        fp8_pe1_fp8_e4m3_mac1_add_start <= 0;
        fp8_pe1_fp8_e4m3_mac1_accumulator <= 0;
        fp8_pe1_fp8_e4m3_mac1_add_pending <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe1_fp8_e4m3_mac1_acc_state <= 2'b00;
            fp8_pe1_fp8_e4m3_mac1_accumulator <= 0;
            fp8_pe1_fp8_e4m3_mac1_add_pending <= 0;
            fp8_pe1_fp8_e4m3_mac1_s_mac_done <= 0;
        end
        else begin
            fp8_pe1_fp8_e4m3_mac1_s_mac_done <= 0;
            case (fp8_pe1_fp8_e4m3_mac1_acc_state)
                2'b00: begin
                    if (i_clear_acc) begin
                        fp8_pe1_fp8_e4m3_mac1_accumulator <= 0;
                        fp8_pe1_fp8_e4m3_mac1_add_pending <= 0;
                    end
                    else if ((fp8_pe1_fp8_e4m3_mac1_mult_pending && (!fp8_pe1_fp8_e4m3_mac1_add_pending))) begin
                        fp8_pe1_fp8_e4m3_mac1_add_a <= fp8_pe1_fp8_e4m3_mac1_mult_result_reg;
                        fp8_pe1_fp8_e4m3_mac1_add_b <= fp8_pe1_fp8_e4m3_mac1_accumulator;
                        fp8_pe1_fp8_e4m3_mac1_add_pending <= 1;
                        fp8_pe1_fp8_e4m3_mac1_acc_state <= 2'b01;
                    end
                end
                2'b01: begin
                    fp8_pe1_fp8_e4m3_mac1_add_start <= 1;
                    fp8_pe1_fp8_e4m3_mac1_acc_state <= 2'b10;
                end
                2'b10: begin
                    fp8_pe1_fp8_e4m3_mac1_add_start <= 0;
                    if (fp8_pe1_fp8_e4m3_mac1_add_done) begin
                        fp8_pe1_fp8_e4m3_mac1_acc_state <= 2'b11;
                    end
                end
                2'b11: begin
                    fp8_pe1_fp8_e4m3_mac1_accumulator <= fp8_pe1_fp8_e4m3_mac1_add_result;
                    fp8_pe1_fp8_e4m3_mac1_add_pending <= 0;
                    fp8_pe1_fp8_e4m3_mac1_s_mac_done <= 1;
                    fp8_pe1_fp8_e4m3_mac1_acc_state <= 2'b00;
                end
            endcase
        end
    end
end


always @(posedge clk) begin: fp8_pe1_fp8_e4m3_mac1_mult_pending_control
    if (i_reset == 1) begin
        fp8_pe1_fp8_e4m3_mac1_mult_pending <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe1_fp8_e4m3_mac1_mult_pending <= 0;
        end
        else begin
            if (((fp8_pe1_fp8_e4m3_mac1_mult_state == 2'b10) && fp8_pe1_fp8_e4m3_mac1_mult_done)) begin
                fp8_pe1_fp8_e4m3_mac1_mult_pending <= 1;
            end
            else if ((fp8_pe1_fp8_e4m3_mac1_acc_state == 2'b11)) begin
                fp8_pe1_fp8_e4m3_mac1_mult_pending <= 0;
            end
            else if (i_clear_acc) begin
                fp8_pe1_fp8_e4m3_mac1_mult_pending <= 0;
            end
        end
    end
end


always @(posedge clk) begin: fp8_pe1_fp8_e4m3_mac1_output_control
    if (i_reset == 1) begin
        fp8_pe1_fp8_e4m3_mac1_output_reg <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe1_fp8_e4m3_mac1_output_reg <= 0;
        end
        else begin
            if (i_read_en) begin
                fp8_pe1_fp8_e4m3_mac1_output_reg <= fp8_pe1_fp8_e4m3_mac1_accumulator;
            end
        end
    end
end



assign fp8_pe1_output_reg = fp8_pe1_fp8_e4m3_mac1_output_reg;
assign fp8_pe1_mac_done = fp8_pe1_fp8_e4m3_mac1_s_mac_done;
assign fp8_pe1_fp8_e4m3_mac1_s_ready_for_new = ((fp8_pe1_fp8_e4m3_mac1_mult_state == 2'b00) && (!fp8_pe1_fp8_e4m3_mac1_mult_pending));
assign fp8_pe1_mac_ready = fp8_pe1_fp8_e4m3_mac1_s_ready_for_new;

// Control logic for the MAC unit

assign fp8_pe1_mac_start = (i_data_valid && fp8_pe1_mac_ready);
assign mac_done_signals[1] = fp8_pe1_mac_done;
assign ready_signals[1] = fp8_pe1_mac_ready;

// Connect the MAC output to the PE output

assign c_outputs[1] = fp8_pe1_output_reg;


always @(posedge clk) begin: fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state_machine
    if (i_reset == 1) begin
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_is_zero <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_man <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_temp_mantissa_bits <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_exp <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_sticky <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_is_nan <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_man <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_shift_amount <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_guard <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_is_nan <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_round_bit <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_sign <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_is_zero <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_sign <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_man <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b000;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_s_done <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_s_output_z <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_temp_shifted_man <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_sign <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_product <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_exp <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b000;
            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_s_done <= 0;
        end
        else begin
            case (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state)
                3'b000: begin
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_s_done <= 0;
                    if (fp8_pe2_fp8_e4m3_mac2_mult_start) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a <= fp8_pe2_fp8_e4m3_mac2_mult_a;
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b <= fp8_pe2_fp8_e4m3_mac2_mult_b;
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b001;
                    end
                end
                3'b001: begin
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_sign <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a[(8 - 1)] != 0);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_exp <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a[(8 - 1)-1:3] - 7);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_sign <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b[(8 - 1)] != 0);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_exp <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b[(8 - 1)-1:3] - 7);
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a[(8 - 1)-1:3] != 0)) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_man <= {1'h1, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a[3-1:0]};
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_man <= {1'h0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a[3-1:0]};
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_exp <= (1 - 7);
                    end
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b[(8 - 1)-1:3] != 0)) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_man <= {1'h1, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b[3-1:0]};
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_man <= {1'h0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b[3-1:0]};
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_exp <= (1 - 7);
                    end
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_is_zero <= ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a[(8 - 1)-1:3] == 0) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a[3-1:0] == 0));
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_is_zero <= ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b[(8 - 1)-1:3] == 0) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b[3-1:0] == 0));
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_is_nan <= (($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a[3-1:0]}) == ((1 << 3) - 1)));
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_is_nan <= (($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b[3-1:0]}) == ((1 << 3) - 1)));
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b010;
                end
                3'b010: begin
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_sign <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_sign ^ fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_sign);
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_is_nan || fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_is_nan)) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z <= ((((1 << 4) - 1) << 3) | (1 << (3 - 1)));
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b111;
                    end
                    else if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_is_zero || fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_is_zero)) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z <= ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_sign}) << (8 - 1));
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b111;
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b011;
                    end
                end
                3'b011: begin
                    if (((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_man[3] == 0) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_man != 0))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_man <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_man << 1);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_exp <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_exp - 1);
                    end
                    else if (((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_man[3] == 0) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_man != 0))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_man <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_man << 1);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_exp <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_exp - 1);
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_exp + fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_exp);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_product <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_man * fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_man);
                        if (((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_a_exp + fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_b_exp) >= (7 + 2))) begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z <= (($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_sign}) << (8 - 1)) | ((1 << 7) - 2));
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b111;
                        end
                        else begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b100;
                        end
                    end
                end
                3'b100: begin
                    if (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_product[((2 * (3 + 1)) - 1)]) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_man <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_product[((2 * (3 + 1)) - 1)-1:(((2 * (3 + 1)) - 3) - 1)];
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp + 1);
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_man <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_product[((2 * (3 + 1)) - 2)-1:(((2 * (3 + 1)) - 3) - 2)];
                    end
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_guard <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_product[2] != 0);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_round_bit <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_product[1] != 0);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_sticky <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_product[0] != 0);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b101;
                end
                3'b101: begin
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_guard && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_round_bit || fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_sticky || fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_man[0]))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_man <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_man + 1);
                        if (($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_man}) == ((1 << (3 + 1)) - 1))) begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp + 1);
                        end
                    end
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b110;
                end
                3'b110: begin
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp < ((-7) - 3))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z <= ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_sign}) << (8 - 1));
                    end
                    else if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp < (-7))) begin
                        if ((((-7) - fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp) <= 3)) begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_shift_amount <= ((-7) - fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp);
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_temp_shifted_man <= $signed($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_man}) >>> ((-7) - fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp));
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_temp_mantissa_bits <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_temp_shifted_man[3-1:0];
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z <= (($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_sign}) << (8 - 1)) | fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_temp_mantissa_bits);
                        end
                        else begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z <= ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_sign}) << (8 - 1));
                        end
                    end
                    else if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp >= (7 + 2))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z <= ((($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_sign}) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 2));
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z <= ((($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_sign}) << (8 - 1)) | ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_exp + 7) << 3)) | fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z_man[3-1:0]);
                    end
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b111;
                end
                3'b111: begin
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_s_output_z <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_z;
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_s_done <= 1;
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_state <= 3'b000;
                end
            endcase
        end
    end
end



assign fp8_pe2_fp8_e4m3_mac2_mult_result = fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_s_output_z;
assign fp8_pe2_fp8_e4m3_mac2_mult_done = fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_multiply2_s_done;


always @(posedge clk) begin: fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state_machine
    if (i_reset == 1) begin
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sticky <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_exp_diff <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_e <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_guard <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_s <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_round_bit <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_s <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b0000;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_e <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_s_done <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_s <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_s_output_z <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m <= 0;
        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b0000;
            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_s_done <= 0;
        end
        else begin
            case (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state)
                4'b0000: begin
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_s_done <= 0;
                    if (fp8_pe2_fp8_e4m3_mac2_add_start) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a <= fp8_pe2_fp8_e4m3_mac2_add_a;
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b <= fp8_pe2_fp8_e4m3_mac2_add_b;
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b0001;
                    end
                end
                4'b0001: begin
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_s <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[(8 - 1)] != 0);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_e <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[(8 - 1)-1:3] - 7);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m <= 5'h0;
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_s <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[(8 - 1)] != 0);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_e <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[(8 - 1)-1:3] - 7);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m <= 5'h0;
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[(8 - 1)-1:3] != 0)) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m <= {1'h1, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[3-1:0], 1'h0};
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m <= {1'h0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[3-1:0], 1'h0};
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_e <= ((-7) + 1);
                    end
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[(8 - 1)-1:3] != 0)) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m <= {1'h1, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[3-1:0], 1'h0};
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m <= {1'h0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[3-1:0], 1'h0};
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_e <= ((-7) + 1);
                    end
                    if ((($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[(8 - 1)-1:3]}) - 7) > ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[(8 - 1)-1:3]}) - 7))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_exp_diff <= (($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[(8 - 1)-1:3]}) - 7) - ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[(8 - 1)-1:3]}) - 7));
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_exp_diff <= (($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[(8 - 1)-1:3]}) - 7) - ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[(8 - 1)-1:3]}) - 7));
                    end
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b0010;
                end
                4'b0010: begin
                    if (((($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[3-1:0]}) == ((1 << 3) - 1))) || (($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[3-1:0]}) == ((1 << 3) - 1))))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z <= ((($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_s}) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 1));
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b1010;
                    end
                    else if (((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[(8 - 1)-1:3] == 0) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[3-1:0] == 0))) begin
                        if (((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[(8 - 1)-1:3] == 0) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[3-1:0] == 0))) begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z <= ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_s & fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_s) << (8 - 1));
                        end
                        else begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b;
                        end
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b1010;
                    end
                    else if (((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[(8 - 1)-1:3] == 0) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[3-1:0] == 0))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a;
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b1010;
                    end
                    else if ((((($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a[3-1:0]}) == ((1 << 3) - 2))) || (($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b[3-1:0]}) == ((1 << 3) - 2)))) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_s == fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_s))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z <= ((((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_s & fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_s) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 2));
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b1010;
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b0011;
                    end
                end
                4'b0011: begin
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_e > fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_e)) begin
                        if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_exp_diff > 5)) begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a;
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b1010;
                        end
                        else begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_e <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_e + 1);
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m >>> 1);
                            if (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m[0]) begin
                                fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m[0] <= 1;
                            end
                        end
                    end
                    else if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_e < fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_e)) begin
                        if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_exp_diff > 5)) begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b;
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b1010;
                        end
                        else begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_e <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_e + 1);
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m >>> 1);
                            if (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m[0]) begin
                                fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m[0] <= 1;
                            end
                        end
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b0100;
                    end
                end
                4'b0100: begin
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_e;
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_s == fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_s)) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m + fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_s <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_s;
                    end
                    else begin
                        if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m >= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m)) begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m - fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m);
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_s <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_s;
                        end
                        else begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_m - fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_a_m);
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_s <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_b_s;
                        end
                    end
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b0101;
                end
                4'b0101: begin
                    if (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val[(3 + 2)]) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val[(3 + 3)-1:2];
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_guard <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val[1] != 0);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_round_bit <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val[0] != 0);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sticky <= 1'b0;
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e + 1);
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val[(3 + 2)-1:1];
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_guard <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sum_val[0] != 0);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_round_bit <= 1'b0;
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sticky <= 1'b0;
                    end
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b0110;
                end
                4'b0110: begin
                    if (((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m[3] == 0) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e > ((-7) + 1)))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e - 1);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m << 1);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m[0] <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_guard;
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_guard <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_round_bit;
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_round_bit <= 1'b0;
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b0111;
                    end
                end
                4'b0111: begin
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e < ((-7) + 1))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e + 1);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_guard <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m[0];
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m >>> 1);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_round_bit <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_guard;
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sticky <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sticky | fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_round_bit);
                    end
                    else begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b1000;
                    end
                end
                4'b1000: begin
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_guard && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_round_bit || fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_sticky || fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m[0]))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m + 1);
                        if (($signed({1'b0, fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m}) == ((1 << 3) - 1))) begin
                            fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e + 1);
                        end
                    end
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b1001;
                end
                4'b1001: begin
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z[3-1:0] <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m[3-1:0];
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z[(8 - 1)-1:3] <= (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e + 7);
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z[(8 - 1)] <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_s;
                    if (((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e == ((-7) + 1)) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m[3] == 0))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z[(8 - 1)-1:3] <= 0;
                    end
                    if (((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e <= ((-7) + 1)) && (fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_m == 0))) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z[(8 - 1)] <= 0;
                    end
                    if ((fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z_e >= 7)) begin
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z[(8 - 1)-1:3] <= ((1 << 4) - 1);
                        fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z[3-1:0] <= ((1 << 3) - 2);
                    end
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b1010;
                end
                4'b1010: begin
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_s_output_z <= fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_z;
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_s_done <= 1;
                    fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_state <= 4'b0000;
                end
            endcase
        end
    end
end



assign fp8_pe2_fp8_e4m3_mac2_add_result = fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_s_output_z;
assign fp8_pe2_fp8_e4m3_mac2_add_done = fp8_pe2_fp8_e4m3_mac2_fp8_e4m3_add2_s_done;


always @(posedge clk) begin: fp8_pe2_fp8_e4m3_mac2_multiply_pipeline
    if (i_reset == 1) begin
        fp8_pe2_fp8_e4m3_mac2_mult_state <= 2'b00;
        fp8_pe2_fp8_e4m3_mac2_mult_start <= 0;
        fp8_pe2_fp8_e4m3_mac2_mult_result_reg <= 0;
        fp8_pe2_fp8_e4m3_mac2_mult_a <= 0;
        fp8_pe2_fp8_e4m3_mac2_mult_b <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe2_fp8_e4m3_mac2_mult_state <= 2'b00;
        end
        else begin
            case (fp8_pe2_fp8_e4m3_mac2_mult_state)
                2'b00: begin
                    if (fp8_pe2_mac_start) begin
                        fp8_pe2_fp8_e4m3_mac2_mult_a <= a_slices[1];
                        fp8_pe2_fp8_e4m3_mac2_mult_b <= b_slices[0];
                        fp8_pe2_fp8_e4m3_mac2_mult_state <= 2'b01;
                    end
                end
                2'b01: begin
                    fp8_pe2_fp8_e4m3_mac2_mult_start <= 1;
                    fp8_pe2_fp8_e4m3_mac2_mult_state <= 2'b10;
                end
                2'b10: begin
                    fp8_pe2_fp8_e4m3_mac2_mult_start <= 0;
                    if (fp8_pe2_fp8_e4m3_mac2_mult_done) begin
                        fp8_pe2_fp8_e4m3_mac2_mult_result_reg <= fp8_pe2_fp8_e4m3_mac2_mult_result;
                        fp8_pe2_fp8_e4m3_mac2_mult_state <= 2'b00;
                    end
                end
            endcase
        end
    end
end


always @(posedge clk) begin: fp8_pe2_fp8_e4m3_mac2_accumulate_pipeline
    if (i_reset == 1) begin
        fp8_pe2_fp8_e4m3_mac2_acc_state <= 2'b00;
        fp8_pe2_fp8_e4m3_mac2_add_a <= 0;
        fp8_pe2_fp8_e4m3_mac2_add_b <= 0;
        fp8_pe2_fp8_e4m3_mac2_s_mac_done <= 0;
        fp8_pe2_fp8_e4m3_mac2_add_start <= 0;
        fp8_pe2_fp8_e4m3_mac2_accumulator <= 0;
        fp8_pe2_fp8_e4m3_mac2_add_pending <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe2_fp8_e4m3_mac2_acc_state <= 2'b00;
            fp8_pe2_fp8_e4m3_mac2_accumulator <= 0;
            fp8_pe2_fp8_e4m3_mac2_add_pending <= 0;
            fp8_pe2_fp8_e4m3_mac2_s_mac_done <= 0;
        end
        else begin
            fp8_pe2_fp8_e4m3_mac2_s_mac_done <= 0;
            case (fp8_pe2_fp8_e4m3_mac2_acc_state)
                2'b00: begin
                    if (i_clear_acc) begin
                        fp8_pe2_fp8_e4m3_mac2_accumulator <= 0;
                        fp8_pe2_fp8_e4m3_mac2_add_pending <= 0;
                    end
                    else if ((fp8_pe2_fp8_e4m3_mac2_mult_pending && (!fp8_pe2_fp8_e4m3_mac2_add_pending))) begin
                        fp8_pe2_fp8_e4m3_mac2_add_a <= fp8_pe2_fp8_e4m3_mac2_mult_result_reg;
                        fp8_pe2_fp8_e4m3_mac2_add_b <= fp8_pe2_fp8_e4m3_mac2_accumulator;
                        fp8_pe2_fp8_e4m3_mac2_add_pending <= 1;
                        fp8_pe2_fp8_e4m3_mac2_acc_state <= 2'b01;
                    end
                end
                2'b01: begin
                    fp8_pe2_fp8_e4m3_mac2_add_start <= 1;
                    fp8_pe2_fp8_e4m3_mac2_acc_state <= 2'b10;
                end
                2'b10: begin
                    fp8_pe2_fp8_e4m3_mac2_add_start <= 0;
                    if (fp8_pe2_fp8_e4m3_mac2_add_done) begin
                        fp8_pe2_fp8_e4m3_mac2_acc_state <= 2'b11;
                    end
                end
                2'b11: begin
                    fp8_pe2_fp8_e4m3_mac2_accumulator <= fp8_pe2_fp8_e4m3_mac2_add_result;
                    fp8_pe2_fp8_e4m3_mac2_add_pending <= 0;
                    fp8_pe2_fp8_e4m3_mac2_s_mac_done <= 1;
                    fp8_pe2_fp8_e4m3_mac2_acc_state <= 2'b00;
                end
            endcase
        end
    end
end


always @(posedge clk) begin: fp8_pe2_fp8_e4m3_mac2_mult_pending_control
    if (i_reset == 1) begin
        fp8_pe2_fp8_e4m3_mac2_mult_pending <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe2_fp8_e4m3_mac2_mult_pending <= 0;
        end
        else begin
            if (((fp8_pe2_fp8_e4m3_mac2_mult_state == 2'b10) && fp8_pe2_fp8_e4m3_mac2_mult_done)) begin
                fp8_pe2_fp8_e4m3_mac2_mult_pending <= 1;
            end
            else if ((fp8_pe2_fp8_e4m3_mac2_acc_state == 2'b11)) begin
                fp8_pe2_fp8_e4m3_mac2_mult_pending <= 0;
            end
            else if (i_clear_acc) begin
                fp8_pe2_fp8_e4m3_mac2_mult_pending <= 0;
            end
        end
    end
end


always @(posedge clk) begin: fp8_pe2_fp8_e4m3_mac2_output_control
    if (i_reset == 1) begin
        fp8_pe2_fp8_e4m3_mac2_output_reg <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe2_fp8_e4m3_mac2_output_reg <= 0;
        end
        else begin
            if (i_read_en) begin
                fp8_pe2_fp8_e4m3_mac2_output_reg <= fp8_pe2_fp8_e4m3_mac2_accumulator;
            end
        end
    end
end



assign fp8_pe2_output_reg = fp8_pe2_fp8_e4m3_mac2_output_reg;
assign fp8_pe2_mac_done = fp8_pe2_fp8_e4m3_mac2_s_mac_done;
assign fp8_pe2_fp8_e4m3_mac2_s_ready_for_new = ((fp8_pe2_fp8_e4m3_mac2_mult_state == 2'b00) && (!fp8_pe2_fp8_e4m3_mac2_mult_pending));
assign fp8_pe2_mac_ready = fp8_pe2_fp8_e4m3_mac2_s_ready_for_new;

// Control logic for the MAC unit

assign fp8_pe2_mac_start = (i_data_valid && fp8_pe2_mac_ready);
assign mac_done_signals[2] = fp8_pe2_mac_done;
assign ready_signals[2] = fp8_pe2_mac_ready;

// Connect the MAC output to the PE output

assign c_outputs[2] = fp8_pe2_output_reg;


always @(posedge clk) begin: fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state_machine
    if (i_reset == 1) begin
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_is_zero <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_man <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_temp_mantissa_bits <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_exp <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_sticky <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_is_nan <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_man <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_shift_amount <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_guard <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_is_nan <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_round_bit <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_sign <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_is_zero <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_sign <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_man <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b000;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_s_done <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_s_output_z <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_temp_shifted_man <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_sign <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_product <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_exp <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b000;
            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_s_done <= 0;
        end
        else begin
            case (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state)
                3'b000: begin
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_s_done <= 0;
                    if (fp8_pe3_fp8_e4m3_mac3_mult_start) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a <= fp8_pe3_fp8_e4m3_mac3_mult_a;
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b <= fp8_pe3_fp8_e4m3_mac3_mult_b;
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b001;
                    end
                end
                3'b001: begin
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_sign <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a[(8 - 1)] != 0);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_exp <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a[(8 - 1)-1:3] - 7);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_sign <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b[(8 - 1)] != 0);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_exp <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b[(8 - 1)-1:3] - 7);
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a[(8 - 1)-1:3] != 0)) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_man <= {1'h1, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a[3-1:0]};
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_man <= {1'h0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a[3-1:0]};
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_exp <= (1 - 7);
                    end
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b[(8 - 1)-1:3] != 0)) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_man <= {1'h1, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b[3-1:0]};
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_man <= {1'h0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b[3-1:0]};
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_exp <= (1 - 7);
                    end
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_is_zero <= ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a[(8 - 1)-1:3] == 0) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a[3-1:0] == 0));
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_is_zero <= ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b[(8 - 1)-1:3] == 0) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b[3-1:0] == 0));
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_is_nan <= (($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a[3-1:0]}) == ((1 << 3) - 1)));
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_is_nan <= (($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b[3-1:0]}) == ((1 << 3) - 1)));
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b010;
                end
                3'b010: begin
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_sign <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_sign ^ fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_sign);
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_is_nan || fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_is_nan)) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z <= ((((1 << 4) - 1) << 3) | (1 << (3 - 1)));
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b111;
                    end
                    else if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_is_zero || fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_is_zero)) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z <= ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_sign}) << (8 - 1));
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b111;
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b011;
                    end
                end
                3'b011: begin
                    if (((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_man[3] == 0) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_man != 0))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_man <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_man << 1);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_exp <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_exp - 1);
                    end
                    else if (((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_man[3] == 0) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_man != 0))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_man <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_man << 1);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_exp <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_exp - 1);
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_exp + fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_exp);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_product <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_man * fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_man);
                        if (((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_a_exp + fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_b_exp) >= (7 + 2))) begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z <= (($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_sign}) << (8 - 1)) | ((1 << 7) - 2));
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b111;
                        end
                        else begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b100;
                        end
                    end
                end
                3'b100: begin
                    if (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_product[((2 * (3 + 1)) - 1)]) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_man <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_product[((2 * (3 + 1)) - 1)-1:(((2 * (3 + 1)) - 3) - 1)];
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp + 1);
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_man <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_product[((2 * (3 + 1)) - 2)-1:(((2 * (3 + 1)) - 3) - 2)];
                    end
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_guard <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_product[2] != 0);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_round_bit <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_product[1] != 0);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_sticky <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_product[0] != 0);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b101;
                end
                3'b101: begin
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_guard && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_round_bit || fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_sticky || fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_man[0]))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_man <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_man + 1);
                        if (($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_man}) == ((1 << (3 + 1)) - 1))) begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp + 1);
                        end
                    end
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b110;
                end
                3'b110: begin
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp < ((-7) - 3))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z <= ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_sign}) << (8 - 1));
                    end
                    else if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp < (-7))) begin
                        if ((((-7) - fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp) <= 3)) begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_shift_amount <= ((-7) - fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp);
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_temp_shifted_man <= $signed($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_man}) >>> ((-7) - fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp));
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_temp_mantissa_bits <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_temp_shifted_man[3-1:0];
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z <= (($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_sign}) << (8 - 1)) | fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_temp_mantissa_bits);
                        end
                        else begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z <= ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_sign}) << (8 - 1));
                        end
                    end
                    else if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp >= (7 + 2))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z <= ((($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_sign}) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 2));
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z <= ((($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_sign}) << (8 - 1)) | ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_exp + 7) << 3)) | fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z_man[3-1:0]);
                    end
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b111;
                end
                3'b111: begin
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_s_output_z <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_z;
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_s_done <= 1;
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_state <= 3'b000;
                end
            endcase
        end
    end
end



assign fp8_pe3_fp8_e4m3_mac3_mult_result = fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_s_output_z;
assign fp8_pe3_fp8_e4m3_mac3_mult_done = fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_multiply3_s_done;


always @(posedge clk) begin: fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state_machine
    if (i_reset == 1) begin
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sticky <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_exp_diff <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_e <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_guard <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_s <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_round_bit <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_s <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b0000;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_e <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_s_done <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_s <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_s_output_z <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m <= 0;
        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b0000;
            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_s_done <= 0;
        end
        else begin
            case (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state)
                4'b0000: begin
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_s_done <= 0;
                    if (fp8_pe3_fp8_e4m3_mac3_add_start) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a <= fp8_pe3_fp8_e4m3_mac3_add_a;
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b <= fp8_pe3_fp8_e4m3_mac3_add_b;
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b0001;
                    end
                end
                4'b0001: begin
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_s <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[(8 - 1)] != 0);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_e <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[(8 - 1)-1:3] - 7);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m <= 5'h0;
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_s <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[(8 - 1)] != 0);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_e <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[(8 - 1)-1:3] - 7);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m <= 5'h0;
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[(8 - 1)-1:3] != 0)) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m <= {1'h1, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[3-1:0], 1'h0};
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m <= {1'h0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[3-1:0], 1'h0};
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_e <= ((-7) + 1);
                    end
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[(8 - 1)-1:3] != 0)) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m <= {1'h1, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[3-1:0], 1'h0};
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m <= {1'h0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[3-1:0], 1'h0};
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_e <= ((-7) + 1);
                    end
                    if ((($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[(8 - 1)-1:3]}) - 7) > ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[(8 - 1)-1:3]}) - 7))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_exp_diff <= (($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[(8 - 1)-1:3]}) - 7) - ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[(8 - 1)-1:3]}) - 7));
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_exp_diff <= (($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[(8 - 1)-1:3]}) - 7) - ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[(8 - 1)-1:3]}) - 7));
                    end
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b0010;
                end
                4'b0010: begin
                    if (((($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[3-1:0]}) == ((1 << 3) - 1))) || (($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[3-1:0]}) == ((1 << 3) - 1))))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z <= ((($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_s}) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 1));
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b1010;
                    end
                    else if (((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[(8 - 1)-1:3] == 0) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[3-1:0] == 0))) begin
                        if (((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[(8 - 1)-1:3] == 0) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[3-1:0] == 0))) begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z <= ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_s & fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_s) << (8 - 1));
                        end
                        else begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b;
                        end
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b1010;
                    end
                    else if (((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[(8 - 1)-1:3] == 0) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[3-1:0] == 0))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a;
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b1010;
                    end
                    else if ((((($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a[3-1:0]}) == ((1 << 3) - 2))) || (($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[(8 - 1)-1:3]}) == ((1 << 4) - 1)) && ($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b[3-1:0]}) == ((1 << 3) - 2)))) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_s == fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_s))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z <= ((((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_s & fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_s) << (8 - 1)) | (((1 << 4) - 1) << 3)) | ((1 << 3) - 2));
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b1010;
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b0011;
                    end
                end
                4'b0011: begin
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_e > fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_e)) begin
                        if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_exp_diff > 5)) begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a;
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b1010;
                        end
                        else begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_e <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_e + 1);
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m >>> 1);
                            if (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m[0]) begin
                                fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m[0] <= 1;
                            end
                        end
                    end
                    else if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_e < fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_e)) begin
                        if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_exp_diff > 5)) begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b;
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b1010;
                        end
                        else begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_e <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_e + 1);
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m >>> 1);
                            if (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m[0]) begin
                                fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m[0] <= 1;
                            end
                        end
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b0100;
                    end
                end
                4'b0100: begin
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_e;
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_s == fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_s)) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m + fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_s <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_s;
                    end
                    else begin
                        if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m >= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m)) begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m - fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m);
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_s <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_s;
                        end
                        else begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_m - fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_a_m);
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_s <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_b_s;
                        end
                    end
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b0101;
                end
                4'b0101: begin
                    if (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val[(3 + 2)]) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val[(3 + 3)-1:2];
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_guard <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val[1] != 0);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_round_bit <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val[0] != 0);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sticky <= 1'b0;
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e + 1);
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val[(3 + 2)-1:1];
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_guard <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sum_val[0] != 0);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_round_bit <= 1'b0;
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sticky <= 1'b0;
                    end
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b0110;
                end
                4'b0110: begin
                    if (((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m[3] == 0) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e > ((-7) + 1)))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e - 1);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m << 1);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m[0] <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_guard;
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_guard <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_round_bit;
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_round_bit <= 1'b0;
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b0111;
                    end
                end
                4'b0111: begin
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e < ((-7) + 1))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e + 1);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_guard <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m[0];
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m >>> 1);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_round_bit <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_guard;
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sticky <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sticky | fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_round_bit);
                    end
                    else begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b1000;
                    end
                end
                4'b1000: begin
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_guard && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_round_bit || fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_sticky || fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m[0]))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m + 1);
                        if (($signed({1'b0, fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m}) == ((1 << 3) - 1))) begin
                            fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e + 1);
                        end
                    end
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b1001;
                end
                4'b1001: begin
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z[3-1:0] <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m[3-1:0];
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z[(8 - 1)-1:3] <= (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e + 7);
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z[(8 - 1)] <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_s;
                    if (((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e == ((-7) + 1)) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m[3] == 0))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z[(8 - 1)-1:3] <= 0;
                    end
                    if (((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e <= ((-7) + 1)) && (fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_m == 0))) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z[(8 - 1)] <= 0;
                    end
                    if ((fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z_e >= 7)) begin
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z[(8 - 1)-1:3] <= ((1 << 4) - 1);
                        fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z[3-1:0] <= ((1 << 3) - 2);
                    end
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b1010;
                end
                4'b1010: begin
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_s_output_z <= fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_z;
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_s_done <= 1;
                    fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_state <= 4'b0000;
                end
            endcase
        end
    end
end



assign fp8_pe3_fp8_e4m3_mac3_add_result = fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_s_output_z;
assign fp8_pe3_fp8_e4m3_mac3_add_done = fp8_pe3_fp8_e4m3_mac3_fp8_e4m3_add3_s_done;


always @(posedge clk) begin: fp8_pe3_fp8_e4m3_mac3_multiply_pipeline
    if (i_reset == 1) begin
        fp8_pe3_fp8_e4m3_mac3_mult_state <= 2'b00;
        fp8_pe3_fp8_e4m3_mac3_mult_start <= 0;
        fp8_pe3_fp8_e4m3_mac3_mult_result_reg <= 0;
        fp8_pe3_fp8_e4m3_mac3_mult_a <= 0;
        fp8_pe3_fp8_e4m3_mac3_mult_b <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe3_fp8_e4m3_mac3_mult_state <= 2'b00;
        end
        else begin
            case (fp8_pe3_fp8_e4m3_mac3_mult_state)
                2'b00: begin
                    if (fp8_pe3_mac_start) begin
                        fp8_pe3_fp8_e4m3_mac3_mult_a <= a_slices[1];
                        fp8_pe3_fp8_e4m3_mac3_mult_b <= b_slices[1];
                        fp8_pe3_fp8_e4m3_mac3_mult_state <= 2'b01;
                    end
                end
                2'b01: begin
                    fp8_pe3_fp8_e4m3_mac3_mult_start <= 1;
                    fp8_pe3_fp8_e4m3_mac3_mult_state <= 2'b10;
                end
                2'b10: begin
                    fp8_pe3_fp8_e4m3_mac3_mult_start <= 0;
                    if (fp8_pe3_fp8_e4m3_mac3_mult_done) begin
                        fp8_pe3_fp8_e4m3_mac3_mult_result_reg <= fp8_pe3_fp8_e4m3_mac3_mult_result;
                        fp8_pe3_fp8_e4m3_mac3_mult_state <= 2'b00;
                    end
                end
            endcase
        end
    end
end


always @(posedge clk) begin: fp8_pe3_fp8_e4m3_mac3_accumulate_pipeline
    if (i_reset == 1) begin
        fp8_pe3_fp8_e4m3_mac3_acc_state <= 2'b00;
        fp8_pe3_fp8_e4m3_mac3_add_a <= 0;
        fp8_pe3_fp8_e4m3_mac3_add_b <= 0;
        fp8_pe3_fp8_e4m3_mac3_s_mac_done <= 0;
        fp8_pe3_fp8_e4m3_mac3_add_start <= 0;
        fp8_pe3_fp8_e4m3_mac3_accumulator <= 0;
        fp8_pe3_fp8_e4m3_mac3_add_pending <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe3_fp8_e4m3_mac3_acc_state <= 2'b00;
            fp8_pe3_fp8_e4m3_mac3_accumulator <= 0;
            fp8_pe3_fp8_e4m3_mac3_add_pending <= 0;
            fp8_pe3_fp8_e4m3_mac3_s_mac_done <= 0;
        end
        else begin
            fp8_pe3_fp8_e4m3_mac3_s_mac_done <= 0;
            case (fp8_pe3_fp8_e4m3_mac3_acc_state)
                2'b00: begin
                    if (i_clear_acc) begin
                        fp8_pe3_fp8_e4m3_mac3_accumulator <= 0;
                        fp8_pe3_fp8_e4m3_mac3_add_pending <= 0;
                    end
                    else if ((fp8_pe3_fp8_e4m3_mac3_mult_pending && (!fp8_pe3_fp8_e4m3_mac3_add_pending))) begin
                        fp8_pe3_fp8_e4m3_mac3_add_a <= fp8_pe3_fp8_e4m3_mac3_mult_result_reg;
                        fp8_pe3_fp8_e4m3_mac3_add_b <= fp8_pe3_fp8_e4m3_mac3_accumulator;
                        fp8_pe3_fp8_e4m3_mac3_add_pending <= 1;
                        fp8_pe3_fp8_e4m3_mac3_acc_state <= 2'b01;
                    end
                end
                2'b01: begin
                    fp8_pe3_fp8_e4m3_mac3_add_start <= 1;
                    fp8_pe3_fp8_e4m3_mac3_acc_state <= 2'b10;
                end
                2'b10: begin
                    fp8_pe3_fp8_e4m3_mac3_add_start <= 0;
                    if (fp8_pe3_fp8_e4m3_mac3_add_done) begin
                        fp8_pe3_fp8_e4m3_mac3_acc_state <= 2'b11;
                    end
                end
                2'b11: begin
                    fp8_pe3_fp8_e4m3_mac3_accumulator <= fp8_pe3_fp8_e4m3_mac3_add_result;
                    fp8_pe3_fp8_e4m3_mac3_add_pending <= 0;
                    fp8_pe3_fp8_e4m3_mac3_s_mac_done <= 1;
                    fp8_pe3_fp8_e4m3_mac3_acc_state <= 2'b00;
                end
            endcase
        end
    end
end


always @(posedge clk) begin: fp8_pe3_fp8_e4m3_mac3_mult_pending_control
    if (i_reset == 1) begin
        fp8_pe3_fp8_e4m3_mac3_mult_pending <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe3_fp8_e4m3_mac3_mult_pending <= 0;
        end
        else begin
            if (((fp8_pe3_fp8_e4m3_mac3_mult_state == 2'b10) && fp8_pe3_fp8_e4m3_mac3_mult_done)) begin
                fp8_pe3_fp8_e4m3_mac3_mult_pending <= 1;
            end
            else if ((fp8_pe3_fp8_e4m3_mac3_acc_state == 2'b11)) begin
                fp8_pe3_fp8_e4m3_mac3_mult_pending <= 0;
            end
            else if (i_clear_acc) begin
                fp8_pe3_fp8_e4m3_mac3_mult_pending <= 0;
            end
        end
    end
end


always @(posedge clk) begin: fp8_pe3_fp8_e4m3_mac3_output_control
    if (i_reset == 1) begin
        fp8_pe3_fp8_e4m3_mac3_output_reg <= 0;
    end
    else begin
        if (i_reset) begin
            fp8_pe3_fp8_e4m3_mac3_output_reg <= 0;
        end
        else begin
            if (i_read_en) begin
                fp8_pe3_fp8_e4m3_mac3_output_reg <= fp8_pe3_fp8_e4m3_mac3_accumulator;
            end
        end
    end
end



assign fp8_pe3_output_reg = fp8_pe3_fp8_e4m3_mac3_output_reg;
assign fp8_pe3_mac_done = fp8_pe3_fp8_e4m3_mac3_s_mac_done;
assign fp8_pe3_fp8_e4m3_mac3_s_ready_for_new = ((fp8_pe3_fp8_e4m3_mac3_mult_state == 2'b00) && (!fp8_pe3_fp8_e4m3_mac3_mult_pending));
assign fp8_pe3_mac_ready = fp8_pe3_fp8_e4m3_mac3_s_ready_for_new;

// Control logic for the MAC unit

assign fp8_pe3_mac_start = (i_data_valid && fp8_pe3_mac_ready);
assign mac_done_signals[3] = fp8_pe3_mac_done;
assign ready_signals[3] = fp8_pe3_mac_ready;

// Connect the MAC output to the PE output

assign c_outputs[3] = fp8_pe3_output_reg;


always @(posedge clk) begin: pe_done_latch_logic
    reg all_done;
    reg [32-1:0] temp;
    if (i_reset == 1) begin
        pe_done_latches[0] <= 0;
        pe_done_latches[1] <= 0;
        pe_done_latches[2] <= 0;
        pe_done_latches[3] <= 0;
        output_matrix_reg <= 0;
        all_pes_done <= 0;
    end
    else begin
        if (i_reset) begin
            pe_done_latches[0] <= 0;
            pe_done_latches[1] <= 0;
            pe_done_latches[2] <= 0;
            pe_done_latches[3] <= 0;
            all_pes_done <= 0;
            output_matrix_reg <= 0;
        end
        else if (i_data_valid) begin
            pe_done_latches[0] <= 0;
            pe_done_latches[1] <= 0;
            pe_done_latches[2] <= 0;
            pe_done_latches[3] <= 0;
            all_pes_done <= 0;
        end
        else begin
            all_done = 1'b1;
            if (mac_done_signals[0]) begin
                pe_done_latches[0] <= 1;
            end
            all_done = (all_done && pe_done_latches[0]);
            if (mac_done_signals[1]) begin
                pe_done_latches[1] <= 1;
            end
            all_done = (all_done && pe_done_latches[1]);
            if (mac_done_signals[2]) begin
                pe_done_latches[2] <= 1;
            end
            all_done = (all_done && pe_done_latches[2]);
            if (mac_done_signals[3]) begin
                pe_done_latches[3] <= 1;
            end
            all_done = (all_done && pe_done_latches[3]);
            all_pes_done <= all_done;
            if (i_read_en) begin
                temp = 32'h0;
                temp[7-1:0] = c_outputs[0];
                temp[15-1:8] = c_outputs[1];
                temp[23-1:16] = c_outputs[2];
                temp[31-1:24] = c_outputs[3];
                output_matrix_reg <= temp;
            end
        end
    end
end


always @(i_read_en, output_matrix_reg, all_pes_done) begin: output_connection
    o_mac_done = all_pes_done;
    if (i_read_en) begin
        o_c_matrix = output_matrix_reg;
    end
    else begin
        o_c_matrix = output_matrix_reg;
    end
end



assign o_ready_for_new = (ready_signals[0] && ready_signals[1] && ready_signals[2] && ready_signals[3]);

endmodule
